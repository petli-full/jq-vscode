[
    {
        "label": "@text",
        "documentation": "Calls tostring."
    },
    {
        "label": "@json",
        "documentation": "Serializes the input as JSON."
    },
    {
        "label": "@html",
        "documentation": "Applies HTML/XML escaping, by mapping the characters <>&'\" to their entity equivalents \\&lt;, \\&gt;, \\&amp;, \\&apos;, \\&quot;."
    },
    {
        "label": "@uri",
        "documentation": "Applies percent-encoding, by mapping all reserved URI characters to a %XX sequence."
    },
    {
        "label": "@csv",
        "documentation": "The input must be an array, and it is rendered as CSV with double quotes for strings, and quotes escaped by repetition."
    },
    {
        "label": "@tsv",
        "documentation": "The input must be an array, and it is rendered as TSV (tab-separated values). Each input array will be printed as a single line. Fields are separated by a single tab (ascii 0x09). Input characters line-feed (ascii 0x0a), carriage-return (ascii 0x0d), tab (ascii 0x09) and backslash (ascii 0x5c) will be output as escape sequences \n, \r, \t, \\ respectively."
    },
    {
        "label": "@sh",
        "documentation": "The input is escaped suitable for use in a command-line for a POSIX shell. If the input is an array, the output will be a series of space-separated strings."
    },
    {
        "label": "@base64",
        "documentation": "The input is converted to base64 as specified by RFC 4648."
    },
    {
        "label": "@base64d",
        "documentation": "The inverse of @base64, input is decoded as specified by RFC 4648. Note: If the decoded string is not UTF-8, the results are undefined."
    }
]